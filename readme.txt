1. Наследование - одна из основных парадигм ООП, обеспечивающая возможность создания новых классов на основе других, при этом свойства и методы родительского класса дублируются в дочернем классе, это позволяет избежать многократного копирования кода в схожих классах, улучшает поддерживаемость и читаемость кода.

Полиморфизм - парадигма ООП, позволяющая реализовать поведение дочернего класса отличное от родительского путём добавления и переопределения методов и свойств.

2. Абстрактные классы позволяют сделать некоторые методы (абстрактные) обязательными для определения у дочерних классов и обеспечивают невозможность создавать объекты от родительского абстрактного класса. При этом в абстрактном классе также могут быть обычные методы и свойства, наследуемые дочерними и не требующие обязательного переопределения.

Интерфейсы определяют обязательные наборы методов для взаимодействия с классом, в отличие от абстрактных классов у одного нового класса может быть несколько интерфейсов, что позволяет разбить методы по некоторым группам (интерфейсам) и комбинировать эти интерфейсы в разных классах в зависимости от необходимости того или иного функционала. В интерфейсах не могут быть определены реализации методов и свойства, но могут быть определены константы, которые наследуются имплементирующими классами и не могут быть переопределены.

Если требуется создать несколько схожих классов незначительно отличающихся поведением в некоторых аспектах - лучше использовать абстрактные классы. Если требуется создавать классы реализующие различный функционал и при этом обеспечить стандартизацию взаимодействия с классами - лучше подойдут интерфейсы.

3. см. classes.php

4. см. interfaces.php